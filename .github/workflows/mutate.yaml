name: Gremlins

on:
    push:
    

jobs:
  gremlins:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Run Gremlins
        uses: go-gremlins/gremlins-action@v1
        with:
          version: latest
          args: --output=output.json
          workdir: controllers
      -  id: gremlins_run
         run: |
          mkdir -p test/dir
      - name: Extract Gremlins output with Python
        run: |
              python3 -c "
              import re
        with open('test/dir/gremlins-output.log', 'r') as file:
            output = file.read()
            killed = re.search(r'Killed:\s+(\d+)', output)
            lived = re.search(r'Lived:\s+(\d+)', output)
            not_covered = re.search(r'Not covered:\s+(\d+)', output)
            test_efficacy = re.search(r'Test efficacy:\s+([\d\.]+%)', output)
            mutator_coverage = re.search(r'Mutator coverage:\s+([\d\.]+%)', output)
            killed_value = killed.group(1) if killed else 'N/A'
            lived_value = lived.group(1) if lived else 'N/A'
            not_covered_value = not_covered.group(1) if not_covered else 'N/A'
            test_efficacy_value = test_efficacy.group(1) if test_efficacy else 'N/A'
            mutator_coverage_value = mutator_coverage.group(1) if mutator_coverage else 'N/A'
        with open('test/dir/gremlins-summary.txt', 'w') as summary_file:
            summary_file.write(f'Killed: {killed_value}\n')
            summary_file.write(f'Lived: {lived_value}\n')
            summary_file.write(f'Not covered: {not_covered_value}\n')
            summary_file.write(f'Test efficacy: {test_efficacy_value}\n')
            summary_file.write(f'Mutator coverage: {mutator_coverage_value}\n')
        
        # Salva a sa√≠da completa do Gremlins
        with open('test/dir/gremlins-full-output.txt', 'w') as full_output_file:
            full_output_file.write(output)
            "
        